import { Quaternion } from "@babylonjs/core";

export const poses = {
  hips: Quaternion.FromEulerAngles(0, 0, 0),
  spine: Quaternion.FromEulerAngles(-Math.PI / 20, Math.PI / 20, 0),
  chest: Quaternion.FromEulerAngles(0, 0, 0),
  upperChest: Quaternion.FromEulerAngles(0, 0, 0),
  neck: Quaternion.FromEulerAngles(0, 0, 0),
  head: Quaternion.FromEulerAngles(0, 0, -Math.PI / 30),
  leftEye: Quaternion.FromEulerAngles(0, 0, 0),
  leftShoulder: Quaternion.FromEulerAngles(0, 0, Math.PI / 4),
  leftUpperArm: Quaternion.FromEulerAngles(0, 0, 0),
  leftLowerArm: Quaternion.FromEulerAngles(0, 0, Math.PI / 4),
  leftHand: Quaternion.FromEulerAngles(0, 0, 0),
  leftThumbProximal: Quaternion.FromEulerAngles(0, 0, 0),
  leftThumbIntermediate: Quaternion.FromEulerAngles(0, 0, 0),
  leftThumbDistal: Quaternion.FromEulerAngles(0, 0, 0),
  leftIndexProximal: Quaternion.FromEulerAngles(0, 0, 0),
  leftIndexIntermediate: Quaternion.FromEulerAngles(0, 0, 0),
  leftIndexDistal: Quaternion.FromEulerAngles(0, 0, 0),
  leftMiddleProximal: Quaternion.FromEulerAngles(0, 0, 0),
  leftMiddleIntermediate: Quaternion.FromEulerAngles(0, 0, 0),
  leftMiddleDistal: Quaternion.FromEulerAngles(0, 0, 0),
  leftRingProximal: Quaternion.FromEulerAngles(0, 0, 0),
  leftRingIntermediate: Quaternion.FromEulerAngles(0, 0, 0),
  leftRingDistal: Quaternion.FromEulerAngles(0, 0, 0),
  leftLittleProximal: Quaternion.FromEulerAngles(0, 0, 0),
  leftLittleIntermediate: Quaternion.FromEulerAngles(0, 0, 0),
  leftLittleDistal: Quaternion.FromEulerAngles(0, 0, 0),
  leftUpperLeg: Quaternion.FromEulerAngles(0, 0, 0),
  leftLowerLeg: Quaternion.FromEulerAngles(0, 0, 0),
  leftFoot: Quaternion.FromEulerAngles(0, 0, 0),
  leftToe: Quaternion.FromEulerAngles(0, 0, 0),
  rightEye: Quaternion.FromEulerAngles(0, 0, 0),
  rightShoulder: Quaternion.FromEulerAngles(0, Math.PI / 6, 0),
  rightUpperArm: Quaternion.FromEulerAngles(0, Math.PI / 4, 0),
  rightLowerArm: Quaternion.FromEulerAngles(0, Math.PI / 8, 0),
  rightHand: Quaternion.FromEulerAngles(0, 0, Math.PI / 2),
  rightThumbProximal: Quaternion.FromEulerAngles(-Math.PI / 8, -Math.PI / 4, 0),
  rightThumbIntermediate: Quaternion.FromEulerAngles(-Math.PI / 4, 0, 0),
  rightThumbDistal: Quaternion.FromEulerAngles(0, 0, 0),
  rightIndexProximal: Quaternion.FromEulerAngles(0, Math.PI / 12, 0),
  rightIndexIntermediate: Quaternion.FromEulerAngles(0, 0, 0),
  rightIndexDistal: Quaternion.FromEulerAngles(0, 0, 0),
  rightMiddleProximal: Quaternion.FromEulerAngles(0, -Math.PI / 12, 0),
  rightMiddleIntermediate: Quaternion.FromEulerAngles(0, 0, 0),
  rightMiddleDistal: Quaternion.FromEulerAngles(0, 0, 0),
  rightRingProximal: Quaternion.FromEulerAngles(0, 0, -Math.PI / 2),
  rightRingIntermediate: Quaternion.FromEulerAngles(0, 0, -Math.PI / 2),
  rightRingDistal: Quaternion.FromEulerAngles(0, 0, 0),
  rightLittleProximal: Quaternion.FromEulerAngles(0, 0, -Math.PI / 2),
  rightLittleIntermediate: Quaternion.FromEulerAngles(0, 0, -Math.PI / 2),
  rightLittleDistal: Quaternion.FromEulerAngles(0, 0, 0),
  rightUpperLeg: Quaternion.FromEulerAngles(0, 0, 0),
  rightLowerLeg: Quaternion.FromEulerAngles(0, 0, 0),
  rightFoot: Quaternion.FromEulerAngles(0, 0, 0),
  rightToe: Quaternion.FromEulerAngles(0, 0, 0),
};
